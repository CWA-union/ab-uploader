service: ab-uploader
app: ab-uploader
org: aflcio

provider:
  name: aws
  runtime: python3.7
  environment:
    S3_UPLOAD_BUCKET: ${self:service}-${opt:stage, self:provider.stage}-uploads
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
      Resource:
        - 'arn:aws:s3:::${self:provider.environment.S3_UPLOAD_BUCKET}/*'

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: non-linux
    slim: true
    layer: true

layers:
  chrome:
    path: chromelayer

package:
  individually: false
  include:
    - '!./**'
    - 'upload.py'
    - 'handler.py'
    - 'bin/**'
    - 'lib/**'
  exclude:
    - '**'

functions:
  test:
    handler: handler.test
    layers:
      - { Ref: PythonRequirementsLambdaLayer }
      - { Ref: ChromeLambdaLayer }
  upload:
    handler: handler.upload_handler
    layers:
      - { Ref: PythonRequirementsLambdaLayer }
      - { Ref: ChromeLambdaLayer }
    timeout: 900
    events:
      - s3:
          bucket: ${self:provider.environment.S3_UPLOAD_BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .csv
